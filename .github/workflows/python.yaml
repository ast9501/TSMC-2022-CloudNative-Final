name: CI CD for python
on:
  push:
    branches:
      - 'master'
      - 'dev'
      - 'test-*/**'
    paths:
      - '**.py'
      - '**/**/Dockerfile'
      - '**.yaml'
  pull_request:
    branches:
      - 'master'
      - 'dev'
    paths:
      - '**.py'
      - '**/**/Dockerfile'
env:
  # Define path for projects
  CRAWLER_BASE_PATH: crawler
  MATH_BASE_PATH: math
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check out repository code to PR branch
        uses: actions/checkout@v3
        #with:
        #  ref: ${{ github.base_ref }}
      - name: Changed file filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            crawler:
              - 'crawler/**'
            math:
              - 'math/**'
      # Check if crawler source code changed
      - name: check crawler source code
        if: steps.filter.outputs.crawler == 'true'
        run: |
          echo "work_path=$CRAWLER_BASE_PATH" >> $GITHUB_ENV
      - name: check math source code
        if: steps.filter.outputs.math == 'true'
        run: |
          echo "work_path=$MATH_BASE_PATH" >> $GITHUB_ENV
      - name: Install dependencies
        working-directory: ./${{ env.work_path }}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt          
      - name: Run unit tests
        working-directory: ./${{ env.work_path }}
        run: |
          pip install pytest
          pip install pytest-cov
          pytest -v --junitxml="results.xml"
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./${{ env.work_path }}/docker
          file: ./${{ env.work_path }}/docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.work_path }}:latest
      #- name: Publish Test Results
      #  uses: EnricoMi/publish-unit-test-result-action/composite@v1
      #  if: always()
      #  with:
      #    files: "./${{ env.work_path }}/*.xml"
  #build:
  #
  prod-check:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deploying to production server on branch $GITHUB_REF"
